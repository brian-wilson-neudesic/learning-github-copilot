openapi: "3.0.3"
info:
  title: Ordering API
  version: "1.0"
  description: API documentation for the orders resource
servers:
  - url: "http://localhost/api/orders"
paths:
  /cancel:
    put:
      summary: Cancel Order
      operationId: CancelOrder
      parameters:
        - in: header
          name: x-requestid
          required: true
          schema:
            type: string
            format: uuid
          description: Request identifier.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOrderCommand"
      responses:
        "200":
          description: Order cancellation successful
        "400":
          description: Bad Request â€“ Invalid or empty request ID.
        "500":
          description: Cancel order failed to process.
  /ship:
    put:
      summary: Ship Order
      operationId: ShipOrder
      parameters:
        - in: header
          name: x-requestid
          required: true
          schema:
            type: string
            format: uuid
          description: Request identifier.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShipOrderCommand"
      responses:
        "200":
          description: Order shipping initiated.
        "400":
          description: Bad Request.
        "500":
          description: Ship order failed to process.
  /{orderId}:
    get:
      summary: Get Order by Id
      operationId: GetOrder
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: integer
          description: The identifier of the order.
      responses:
        "200":
          description: Order found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "404":
          description: Order not found.
  /:
    get:
      summary: Get Orders by User
      operationId: GetOrdersByUser
      responses:
        "200":
          description: List of user orders.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderSummary"
    post:
      summary: Create Order
      operationId: CreateOrder
      parameters:
        - in: header
          name: x-requestid
          required: true
          schema:
            type: string
            format: uuid
          description: Request identifier.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrderRequest"
      responses:
        "200":
          description: Order created successfully.
  /draft:
    post:
      summary: Create Order Draft
      operationId: CreateOrderDraft
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOrderDraftCommand"
      responses:
        "200":
          description: Order draft created successfully.
  /cardtypes:
    get:
      summary: Get Card Types
      operationId: GetCardTypes
      responses:
        "200":
          description: List of card types returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CardType"
components:
  schemas:
    CancelOrderCommand:
      type: object
      properties:
        OrderNumber:
          type: string
      required:
        - OrderNumber
    ShipOrderCommand:
      type: object
      properties:
        OrderNumber:
          type: string
      required:
        - OrderNumber
    Order:
      type: object
      properties:
        OrderNumber:
          type: string
        # ...other order properties...
    OrderSummary:
      type: object
      properties:
        OrderNumber:
          type: string
        # ...other summary properties...
    CreateOrderRequest:
      type: object
      properties:
        UserId:
          type: string
        UserName:
          type: string
        City:
          type: string
        Street:
          type: string
        State:
          type: string
        Country:
          type: string
        ZipCode:
          type: string
        CardNumber:
          type: string
        CardHolderName:
          type: string
        CardExpiration:
          type: string
          format: date-time
        CardSecurityNumber:
          type: string
        CardTypeId:
          type: integer
        Buyer:
          type: string
        Items:
          type: array
          items:
            type: object
        # ...other properties as needed...
      required:
        - UserId
        - UserName
        - CardNumber
    CreateOrderDraftCommand:
      type: object
      properties:
        BuyerId:
          type: string
        # ...other properties as needed...
      required:
        - BuyerId
    CardType:
      type: object
      properties:
        Name:
          type: string
        # ...other properties as needed...
